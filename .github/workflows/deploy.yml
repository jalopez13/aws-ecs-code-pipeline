name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Clean up old ECR images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ecs-next-app
        run: |
          # Keep the 5 most recent images, delete the rest
          IMAGES_TO_DELETE=$(aws ecr list-images --repository-name $ECR_REPOSITORY --query 'imageIds[?type(imageTag)!=`string`].[imageDigest]' --output text)
          if [ ! -z "$IMAGES_TO_DELETE" ]; then
            aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids "$IMAGES_TO_DELETE" || true
          fi

          # Delete the current 'latest' tag if it exists
          aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=latest || true

      - name: Build, tag, and push image to Amazon ECR
        # FIXME: This step fails because of the environment variables
        # env:
        #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #   ECR_REPOSITORY: ecs-next-app
        #   IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy to Amazon ECS
        run: |
          aws ecs update-service --cluster next-app-cluster --service next-app-service --force-new-deployment
